===== Starting build =====
Timestamp
Sat Sep 24 15:59:25 UTC 2011
==========================

===== Updating from SVN =====
At revision 543.

===== Making JETI Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:26"
#define SUB_VERS 4867-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "JETI   "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Compiling C++: jeti.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DJETI -Os -Wall  -MD -MP -MF .dep/jeti.o.d jeti.cpp -o obj/jeti.o

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o obj/jeti.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   55998 bytes (85.4% Full)
(.text + .data + .bootloader)

Data:       3560 bytes (86.9% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making FRSKY Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:29"
#define SUB_VERS 4868-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "FRSKY   "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Compiling C++: frsky.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -Os -Wall  -MD -MP -MF .dep/frsky.o.d frsky.cpp -o obj/frsky.o

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o obj/frsky.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   59782 bytes (91.2% Full)
(.text + .data + .bootloader)

Data:       3654 bytes (89.2% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making FRSKY - SPKR Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:32"
#define SUB_VERS 4869-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "FRSKY  SPK "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Compiling C++: frsky.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/frsky.o.d frsky.cpp -o obj/frsky.o

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o obj/frsky.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   59974 bytes (91.5% Full)
(.text + .data + .bootloader)

Data:       3655 bytes (89.2% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making FRSKY - NOHELI/NOTEMPLATE Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:35"
#define SUB_VERS 4870-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "FRSKY NHT  "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Compiling C++: frsky.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -Os -Wall  -MD -MP -MF .dep/frsky.o.d frsky.cpp -o obj/frsky.o

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o obj/frsky.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   58450 bytes (89.2% Full)
(.text + .data + .bootloader)

Data:       3650 bytes (89.1% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making FRSKY - NOHELI/NOTEMPLATE, SPKR Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:38"
#define SUB_VERS 4871-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "FRSKY NHT SPK "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Compiling C++: frsky.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DFRSKY -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/frsky.o.d frsky.cpp -o obj/frsky.o

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o obj/frsky.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   58656 bytes (89.5% Full)
(.text + .data + .bootloader)

Data:       3651 bytes (89.1% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making ARDUPILOT Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:41"
#define SUB_VERS 4872-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "ARDU   "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Compiling C++: ardupilot.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DARDUPILOT -Os -Wall  -MD -MP -MF .dep/ardupilot.o.d ardupilot.cpp -o obj/ardupilot.o

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o obj/ardupilot.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   57856 bytes (88.3% Full)
(.text + .data + .bootloader)

Data:       3558 bytes (86.9% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making nmea Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:43"
#define SUB_VERS 4873-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "NMEA   "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Compiling C++: nmea.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNMEA -Os -Wall  -MD -MP -MF .dep/nmea.o.d nmea.cpp -o obj/nmea.o

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o obj/nmea.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   58574 bytes (89.4% Full)
(.text + .data + .bootloader)

Data:       3618 bytes (88.3% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making MAIN - NOHELI/NOTEMPLATE, SPKR Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:46"
#define SUB_VERS 4874-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS " NHT SPK "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   54332 bytes (82.9% Full)
(.text + .data + .bootloader)

Data:       3521 bytes (86.0% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making MAIN - SPKR Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:49"
#define SUB_VERS 4875-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "  SPK "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DBEEPSPKR -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   55650 bytes (84.9% Full)
(.text + .data + .bootloader)

Data:       3525 bytes (86.1% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making MAIN - NOHELI/NOTEMPLATE Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:52"
#define SUB_VERS 4876-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS " NHT  "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -DNO_HELI -DNO_TEMPLATES -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   54126 bytes (82.6% Full)
(.text + .data + .bootloader)

Data:       3520 bytes (85.9% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving

===== Making MAIN Version =====
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

>>>  making

-------- begin --------
avr-gcc (GCC) 4.3.5
Copyright (C) 2008 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.


Generate Version-stamp:
//Automatically generated file - do not edit
#define DATE_STR "24.09.2011"
#define TIME_STR "11:11:54"
#define SUB_VERS 4877-erez
#define SVN_VERS "trunk-r544"
#define MOD_VERS "   "

Compiling C++: er9x.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/er9x.o.d er9x.cpp -o obj/er9x.o

Compiling C++: stamp.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/stamp.o.d stamp.cpp -o obj/stamp.o

Compiling C++: menus.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/menus.o.d menus.cpp -o obj/menus.o

Compiling C++: pers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/pers.o.d pers.cpp -o obj/pers.o

Compiling C++: file.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/file.o.d file.cpp -o obj/file.o

Compiling C++: lcd.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/lcd.o.d lcd.cpp -o obj/lcd.o

Compiling C++: drivers.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/drivers.o.d drivers.cpp -o obj/drivers.o

Compiling C++: templates.cpp
avr-gcc -c -mmcu=atmega64 -I. -x c++ -gdwarf-2 -DF_CPU=16000000UL -Os -Wall  -MD -MP -MF .dep/templates.o.d templates.cpp -o obj/templates.o
templates.cpp:52: warning: only initialized variables can be placed into program memory area

Linking: er9x.elf
avr-gcc -mmcu=atmega64 -I. -gdwarf-2 -DF_CPU=16000000UL -Os -funsigned-char -funsigned-bitfields -fpack-struct -fshort-enums -Wall -Wstrict-prototypes -Wundef -Wa,-adhlns=obj/er9x.o  -std=gnu99 --combine -fwhole-program -MD -MP -MF .dep/er9x.elf.d obj/er9x.o obj/stamp.o obj/menus.o obj/pers.o obj/file.o obj/lcd.o obj/drivers.o obj/templates.o --output er9x.elf -Wl,-Map=er9x.map,--cref    -lm

Creating load file for Flash: er9x.hex
avr-objcopy -O ihex -R .eeprom er9x.elf er9x.hex

Creating load file for EEPROM: er9x.eep
avr-objcopy -j .eeprom --set-section-flags=.eeprom="alloc,load" \
--change-section-lma .eeprom=0 -O ihex er9x.elf er9x.eep
avr-objcopy: --change-section-lma .eeprom=0x0000000000000000 never used

Creating Extended Listing: er9x.lss
avr-objdump -h -S er9x.elf > er9x.lss

Creating Symbol Table: er9x.sym
avr-nm -n er9x.elf > er9x.sym

Size after:
AVR Memory Usage
----------------
Device: atmega64

Program:   55458 bytes (84.6% Full)
(.text + .data + .bootloader)

Data:       3524 bytes (86.0% Full)
(.data + .bss + .noinit)



-------- end --------

>>>  moving
>>> cleaning

-------- begin --------

Cleaning project:
rm -f er9x.hex
rm -f er9x.eep
rm -f er9x.cof
rm -f er9x.elf
rm -f er9x.map
rm -f er9x.sym
rm -f er9x.lss
rm -rf obj
rm -f 
rm -f 
rm -rf .dep
-------- end --------

